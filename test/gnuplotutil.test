package require tcltest
namespace import ::tcltest::*
package require csv
package require argparse

set script_path [file dirname [file normalize [info script]]]
lappend auto_path "$script_path/../"
package require gnuplotutil


test testPlotXYN-1.1 {test for all on switches} -setup {
    set x [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotXYN $x -xlog -ylog -xlabel "x label" -ylabel "y label" -grid -names [list  y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotXYN-1.2 {test with no switches} -setup {
    set x [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotXYN $x -names [list y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotXYN-1.3 {test with data of different length} -setup {
    set x [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125]
} -body {
    catch {gnuplotutil::plotXYN $x -xlabel "x label" -ylabel "y label" -grid -names [list  y1 y2] -columns $y1 $y2} errorStr
    return $errorStr
} -result {Number of points of y-axis data (column 0) doesn't match the number of points of x-axis data}

test testPlotXYN-1.4 {test mismatched -names length} -setup {
    set x [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    catch {gnuplotutil::plotXYN $x -xlog -ylog -xlabel "x label" -ylabel "y label" -grid -names [list  y1] -columns $y1 $y2} errorStr
    return $errorStr
} -result {Column names count is not the same as count of data columns}

test testPlotXNYN-1.1 {test for all on switches} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set x2 [list 0 1 2 3 4 5 6 7]
    set y2 [list 0 1 8 27 64 125 216 350]
} -body {
    gnuplotutil::plotXNYN -xlog -ylog -xlabel "x label" -ylabel "y label" -grid -names [list y1 y2] -columns $x1 $y1 $x2 $y2
    set dummyResult 1
} -result 1

test testMultiplotXNYN-1.1 {general test} -setup {
    set x1 [list 1 2 3 4 5 6]
    set y1 [list 1 4 9 16 25 36]
    set x2 [list 6 5 4 3 2 1]
    set y2 [list 36 25 16 9 4 1]
    set x3 [list 7 8 9 10]
    set y3 [list 49 64 81 100]
} -body {
    gnuplotutil::multiplotXNYN {2 2} -plots \
        [list -xlog -ylog -xlabel "x label" -ylabel "y label" -grid -names [list name1 name2 name3] -columns $x1 $y1 $x2 $y2 $x3 $y3] \
        [list -ylabel "y label" -grid -names [list name1 name2] -columns $x1 $y1 $x2 $y2 ] \
        [list -xlabel "x label" -ylabel "y label" -names [list name3] -columns $x3 $y3 ] \
        [list -grid -names [list name2] -columns $x2 $y2 ]
    set dummyResult 1
} -result 1

test testPlotHist-1.1 {test clustered style} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotHist $x1 -style clustered -fill solid -xlabel "x label" \
            -ylabel "y label" -names [list  y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotHist-1.2 {test rowstacked style} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotHist $x1 -style rowstacked -xlabel "x label" -ylabel "y label" \
            -names [list  y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotHist-1.3 {test columnstacked style} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotHist $x1 -style columnstacked -fill solid -xlabel "x label" \
            -ylabel "y label" -names [list  y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotHist-1.4 {test clustered style with border} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotHist $x1 -style clustered -fill solid -border 2 -xlabel "x label" \
            -ylabel "y label" -names [list  y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotHist-1.5 {test boxwidth} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotHist $x1 -style clustered -boxwidth 0.5 -fill solid -xlabel "x label" \
            -ylabel "y label" -names [list  y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotHist-1.6 {test style fill with density} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotHist $x1 -style clustered -boxwidth 0.5 -fill solid -density 0.5 -xlabel "x label" \
            -ylabel "y label" -names [list  y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotHist-1.7 {test style fill with density and transparent modificator} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotHist $x1 -style rowstacked -boxwidth 0.5 -fill solid -transparent -density 0.1 -xlabel "x label" \
            -ylabel "y label" -names [list  y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotHist-1.8 {test with grid} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
} -body {
    gnuplotutil::plotHist $x1 -grid -style rowstacked -boxwidth 0.5 -fill solid -transparent -density 0.1 -xlabel "x label" \
            -ylabel "y label" -names [list  y1 y2] -columns $y1 $y2
    set dummyResult 1
} -result 1

test testPlotHist-1.9 {test with optional command} -setup {
    set x1 [list 0 1 2 3 4 5 6]
    set y1 [list 0 1 4 9 16 25 36]
    set y2 [list 0 1 8 27 64 125 216]
    set optCommand "set xtics font 'Helvetica,5'"
} -body {
    gnuplotutil::plotHist $x1 -grid -style rowstacked -boxwidth 0.5 -fill solid -transparent -density 0.1 -xlabel "x label" \
            -ylabel "y label" -names [list  y1 y2] -optcmd $optCommand -columns $y1 $y2
    set dummyResult 1
} -result 1


cleanupTests