package require tcltest
namespace import ::tcltest::*

package require mathutil
namespace import ::mathutil::*

set epsilon 1e-9

proc matchList {expected actual} {
    variable epsilon
    set match true
    set len [llength $expected]
    for {set i 0} {$i<$len} {incr i} {
        set exp [lindex $expected $i]
        set act [lindex $actual $i]
        if {(abs($act-$exp) > $epsilon) || (abs($act-$exp) > $epsilon)} {
            set match false
            break
        }
    }
    return $match
}

customMatch mtchLst matchList

test trapzProcTest-1 {test procedure of trapezoidal integration} -setup {
    set x [list 0 1 2 3 4 5 6 7 8 9 10]
    set y [list 0 1 4 9 16 25 36 49 64 81 100]
} -body {
    trapz $x $y
} -result 335.0 -cleanup {
    unset x y
}

test trapzProcTest-2 {test procedure of trapezoidal integration with unmatched lists} -setup {
    set x [list 0 1 2 3 4 5 6 7 8 9]
    set y [list 0 1 4 9 16 25 36 49 64 81 100]
} -body {
    catch {trapz $x $y} errorStr
    return $errorStr
} -result "Length of x '10' is not equal to length of y '11'" -cleanup {
    unset x y errorStr
}

test cumtrapzProcTest-1 {test procedure of cumulative trapezoidal integration} -setup {
    set x [list 0 1 2 3 4 5 6 7 8 9 10]
    set y [list 0 1 4 9 16 25 36 49 64 81 100]
} -body {
    cumtrapz $x $y
} -result [list 0.5 3.0 9.5 22.0 42.5 73.0 115.5 172.0 244.5 335.0] -cleanup {
    unset x y
}

test cumtrapzProcTest-2 {test procedure of cumulative trapezoidal integration with unmatched lists} -setup {
    set x [list 0 1 2 3 4 5 6 7 8 9]
    set y [list 0 1 4 9 16 25 36 49 64 81 100]
} -body {
    catch {cumtrapz $x $y} errorStr
    return $errorStr
} -result "Length of x '10' is not equal to length of y '11'" -cleanup {
    unset x y
}

test findApproxProcTest-1 {test procedure of approximate search} -setup {
    set list [list 0 1 4 9 16 25 36 49 64 81 100]
} -body {
    findApprox $list 37 2
} -result 6 -cleanup {
    unset list
}

test findApproxProcTest-2 {test procedure of approximate search} -setup {
    set list [list 0 1 4 9 16 25 36 49 64 81 100]
} -body {
    catch {findApprox $list 37 -2} errorStr
    return $errorStr
} -result {Epsilon must be larger than zero} -cleanup {
    unset list
}

test findApproxProcTest-3 {test procedure of approximate search} -setup {
    set list [list 0 1 4 9 16 25 36 49 64 81 100]
} -body {
    catch {findApprox $list 37 a} errorStr
    return $errorStr
} -result {Epsilon must be a number} -cleanup {
    unset list
}

test findApproxProcTest-4 {test procedure of approximate search} -setup {
    set list [list 0 1 4 9 16 25 36 49 64 81 100]
} -body {
    catch {findApprox $list 37! 2} errorStr
    return $errorStr
} -result {Value must be a number} -cleanup {
    unset list
}

test findApproxProcTest-5 {test procedure of approximate search} -setup {
    set list [list 0 1 4 9 16 25 36 49 64 81 100]
} -body {
    catch {findApprox $list 37 0.5} errorStr
    return $errorStr
} -result {Value '37' was not found} -cleanup {
    unset list
}

test movAvgTest-1 {test procedure of moving average filter} -setup {
    set x [list 0 1 2 3 4 5 6 7 8 9 10 11 12]
    set y [list -3 -4 -1 1 5 7 -2 8 2 -6 -5 7 11]
} -body {
    movAvg $y 3 -x $x
} -result {{1 2 3 4 5 6 7 8 9 10 11} {-3 -2 1 4 3 4 2 1 -3 -2 4}} -cleanup {
    unset x y
}


test movAvgTest-2 {test procedure of moving average filter} -match mtchLst -setup {
    for {set i 0} {$i<=100} {incr i} {
        set xi [= {$i*0.05}]
        lappend x $xi
        lappend y [= {sin($xi)+sin($xi*10)+sin($xi*100)+sin($xi*1000)}]
    }
} -body {
    movAvg $y 11
} -result {-0.34835908108374186 -0.4758220217572019 -0.41068627421921716 -0.22332530834105332 -0.08362340277086916\
                   -0.008231099084842592 0.161205173467671 0.5162112533606057 0.9236881849663073 1.181886479998971\
                   1.2721508943077022 1.3518958139050505 1.5043804697441743 1.6074998276161798 1.5107644159427458\
                   1.2654026359374524 1.0741459279574606 1.0275338212978988 0.9993048282945005 0.8465861790259634\
                   0.6258601378464324 0.5153897068962355 0.5574189826774228 0.5930079754772669 0.4866520187561607\
                   0.3218270602186291 0.28853835024673835 0.42307945967624666 0.5699736545815366 0.616482557098364\
                   0.6593593474454178 0.8615556099248398 1.2027241551459809 1.4819906738537485 1.5724753315157984\
                   1.5681631518617516 1.6186645612664423 1.6939960825185671 1.620032773754223 1.334969531490256\
                   0.9977391875531911 0.7890715124899039 0.6847778429373474 0.5204116670017586 0.2500134913352419\
                   0.02554639889571364 -0.017067391595298072 0.04321722803197403 0.017295769195291612\
                   -0.13173480705719634 -0.2409784542614921 -0.1811626394024797 -0.0368122902377844\
                   0.022781208331054327 -0.006661582872972562 0.044244382729253635 0.27037839650218937\
                   0.5410879011437747 0.6634123543155889 0.6287900742130446 0.5946665532931944 0.6329921757777062\
                   0.6110915988067628 0.37908640697681 -0.0036196178434584132 -0.3290025687353981 -0.5054581070628271\
                   -0.6531645781893214 -0.8991095089000062 -1.1704415905647894 -1.2852314264662157 -1.211125383675823\
                   -1.1194006382424744 -1.1532511558525245 -1.2377857150971776 -1.199873283381554 -1.0234957291068776\
                   -0.8741792579825688 -0.8590193297948396 -0.8692255622835122 -0.7345559247586021 -0.4717151813417358\
                   -0.27268864390712094 -0.2494272670395317 -0.29810827253507133 -0.27308729425216866\
                   -0.21612257153646305 -0.30762170909419173 -0.6064422248784376 -0.9500938479846538\
                   -1.160092909058356} -cleanup {
    unset xi x y
}

test movAvgTest-3 {test procedure of moving average filter} -setup {
    set x [list 0 1 2 3 4 5 6 7 8 9 10]
    set y [list 11 12 13 14 15 16 17]
} -body {
    catch {movAvg $y 3 -x $x} errorStr
    return $errorStr
} -result {Length of x '11' is not equal to length of y '7'} -cleanup {
    unset x y
}

test movAvgTest-4 {test procedure of moving average filter} -setup {
    set y [list 11 12 13 14 15 16 17]
    set winSize 11
} -body {
    catch {movAvg $y $winSize} errorStr
    return $errorStr
} -result {Length of y '7' must be not less than size of window + 1  '11 + 1 = 12'} -cleanup {
    unset winSize y
}

test movAvgTest-5 {test procedure of moving average filter} -setup {
    set y [list 11 12 13 14 15 16 17]
    set winSize 0.5
} -body {
    catch {movAvg $y $winSize} errorStr
    return $errorStr
} -result {Window size must be an integer} -cleanup {
    unset winSize y
}

test movAvgTest-6 {test procedure of moving average filter} -setup {
    set y [list 11 12 13 14 15 16 17]
    set winSize 1
} -body {
    catch {movAvg $y $winSize} errorStr
    return $errorStr
} -result {Window size must be larger than one} -cleanup {
    unset winSize y
}

test movAvgTest-7 {test procedure of moving average filter} -setup {
    set y [list 11 12 13 14 15 16 17]
    set winSize 2
} -body {
    catch {movAvg $y $winSize} errorStr
    return $errorStr
} -result {Size of window must be odd} -cleanup {
    unset winSize y
}

test deriv1Test-1 {test procedure of first derivative calculation} -match mtchLst -setup {
    for {set i 0} {$i<=100} {incr i} {
        set xi [= {$i*0.05}]
        lappend x $xi
        lappend y [= {sin($xi)}]
    }
} -body {
    deriv1 $x $y
} -result {1.0008326043588514 0.9983341664682813 0.9945896320292087 0.9883591414823306 0.9796582678092371\
                   0.9685087586627841 0.9549384820092839 0.9389813564731098 0.9206772665577887 0.9000719629555252\
                   0.87721694819429 0.8521693479083243 0.8249917680538053 0.7957521384265558 0.7645235428729471\
                   0.7313840366183157 0.6964164511695854 0.6597081872796071 0.6213509964908095 0.5814407518041333\
                   0.54007720804643 0.49736375253538867 0.45340714666504134 0.40831725905790783 0.36220679095064945\
                   0.31519099449966603 0.2673873847107284 0.21891544571267296 0.16989633210929433 0.12045256615594013\
                   0.07070773151768783 0.0207861643745062 -0.02918735735438105 -0.07908792589036473\
                   -0.12879081579982277 -0.1781717957427329 -0.22710743898637098 -0.27547543190780566 \
                   -0.32315487971430557 -0.3700266086173283 -0.4159734637049386 -0.4608806017680802 -0.5046357783487778\
                   -0.5471296282928346 -0.5882559391057649 -0.6279119164286993 -0.6659984409707684\
                   -0.7024203162556937 -0.7370865065634069 -0.7699103644719436 -0.8008098474308687 -0.8297077228249234 \
                   -0.8565317610153436 -0.8812149158763427 -0.9036954923755092 -0.9239173007792507 -0.9418297970978724\
                   -0.9573882094192259 -0.970553649815173 -0.9812932115411512 -0.989580051285902 -0.9953934562657665\
                   -0.9987188959958572 -0.9995480586087049 -0.9978788716295967 -0.9937155071566848 -0.9870683714329131\
                   -0.9779540788358294 -0.966395410350295 -0.9524212566278853 -0.9360665457753075 -0.9173721560523247\
                   -0.8963848136973946 -0.8731569761364089 -0.847746700866443 -0.8202175003422578 -0.7906381832282356\
                   -0.7590826824125481 -0.7256298702134467 -0.6903633612395437 -0.6533713033968311 -0.6147461575648236\
                   -0.5745844664925119 -0.5329866134917758 -0.4900565715313725 -0.44590164335866866\
                   -0.40063219329865696 -0.35436137140060886 -0.3072048306218953 -0.25928043775581244\
                   -0.2107079788259778 -0.16160885968367467 -0.1121058025564281 -0.06232253930636311\
                   -0.01238350216498496 0.037586487282601055 0.08746253008664695 0.13711996211508115\
                   0.18643466564892464 0.2352833796119409 0.28386840993535145} -cleanup {
    unset xi x y
}

test deriv1Test-2 {test procedure of first derivative calculation} -match mtchLst -setup {
    set xi 0
    for {set i 0} {$i<=100} {incr i} {
        set xi [= {($xi+0.05*$i/50)}]
        lappend x $xi
        lappend y [= {sin($xi)}]
    }
} -body {
    deriv1 $x $y
} -result {1.000000499999675 0.9999991666670084 0.9999945000089749 0.9999800000942998 0.9999466672618302\
                   0.9998825026983469 0.9997725096984929 0.9995986960270056 0.9993400779078849 0.9989726862696526\
                   0.9984695759799922 0.9978008389065351 0.9969336217431253 0.9958321496421605 0.9944577567930657\
                   0.9927689251840661 0.990721332878528 0.9882679132273346 0.985358926524238 0.9819420456906789\
                   0.9779624576491779 0.9733629821083705 0.9680842095371007 0.9620646601473579 0.9552409657351468\
                   0.9475480762419615 0.9389194928958444 0.9292875297673913 0.918583605530209 0.9067385671449832\
                   0.8936830470883592 0.8793478556201739 0.8636644094218475 0.8465651977428585 0.8279842869577845\
                   0.8078578641612735 0.7861248201096798 0.7627273714536233 0.737611721793364 0.7107287606268358\
                   0.6820347987467024 0.6514923380776789 0.6190708733271411 0.5847477221521178 0.5485088798245386\
                   0.5103498936058646 0.47027675122581414 0.4283067770004383 0.38446952822897273 0.33880768358212343\
                   0.2913779142452615 0.24225172761807912 0.19151627240786517 0.1392750930009452 0.08564882006892383\
                   0.030775783481058028 -0.02518746723151999 -0.08206575035929475 -0.13966496358876057\
                   -0.1977719363291257 -0.2561544398211355 -0.31456137224968916 -0.3727231360704151 -0.4303522245171276\
                   -0.48714403375368054 -0.5427779163418798 -0.5969184905885685 -0.6492172188832219 -0.699314266317046\
                   -0.7468406486631425 -0.791420676175485 -0.8326746966167753 -0.870222137441679 -0.9036848431380786\
                   -0.9326906993676152 -0.9568775307585107 -0.9758972540082912 -0.9894202623811611 -0.997140011775056\
                   -0.9987777723393616 -0.9940875032109475 -0.9828608013818271 -0.9649318691084872 -0.9401824377266372\
                   -0.9085465793656877 -0.8700153319982347 -0.8246410576575589 -0.7725414486691373 -0.7139030925391632\
                   -0.6489845029014898 -0.5781185218277987 -0.5017139980408434 -0.42025664632380355 -0.3343089958725365\
                   -0.24450933966521227 -0.15156960328559776 -0.05627206017261788 0.04053516890423481\
                   0.13794388114223022 0.23499285514999357 0.33209516016829177} -cleanup {
    unset xi x y
}

test deriv1Test-3 {test procedure of first derivative calculation with mismatched lengths} -setup {
    set x [list 0 1 2 3 4 2]
    set y [list 11 12 13 14 15 16 17]
} -body {
    catch {deriv1 $x $y} errorStr
    return $errorStr
} -result "Length of x '6' is not equal to length of y '7'" -cleanup {
    unset x y errorStr
}

test deriv2Test-1 {test procedure of second derivative calculation} -match mtchLst -setup {
    for {set i 0} {$i<=100} {incr i} {
        set xi [= {$i*0.05}]
        lappend x $xi
        lappend y [= {sin($xi)}]
    }
} -body {
    deriv2 $x $y
} -result {-0.04996875781140829 -0.04996875781140829 -0.09981261975150475 -0.14940700212362487 -0.1986279448000923\
                   -0.2473524210580555 -0.29545864508190267 -0.34282637636506874 -0.38933722024778206\
                   -0.43487492384275434 -0.47932566660666087 -0.5225783448319352 -0.5645248493488523 -0.605060335741037\
                   -0.6440834864034355 -0.6814967637817086 -0.7172066541674663 -0.7511239014316722 -0.7831637301201626\
                   -0.8132460573470063 -0.8412956929609866 -0.8672425274807694 -0.891021707333126 -0.9125737969520851\
                   -0.9318449273382249 -0.9487869307012212 -0.963357460856293 -0.9755200990659826 -0.9852444450691419\
                   -0.9925061930649054 -0.9972871924653387 -0.9995754932617369 -0.9993653758937877 -0.996657365545603\
                   -0.9914582308325798 -0.9837809668840662 -0.9736447628613784 -0.961074953996108 -0.9461029582639144\
                   -0.9287661978569264 -0.909108005647472 -0.8871775168781658 -0.863029546349823 -0.8367244514125272\
                   -0.8083279811045819 -0.7779111118127993 -0.7455498698699639 -0.7113251415271064 -0.6753224707815013\
                   -0.6376318455600173 -0.5983474727969658 -0.5575675429652079 -0.5153939846516118 -0.4719322097883881\
                   -0.4272908501782625 -0.38158148597139296 -0.33491836677346143 -0.28741812608065664\
                   -0.239199489757188 -0.190382979281959 -0.14109061050807079 -0.09144558868648724\
                   -0.041572000517136706 0.008405496003234513 0.05836198316109465 0.10817259575537891\
                   0.1577128331954887 0.20685887068787268 0.25548786873354146 0.30347828016286427 0.3507101539402248\
                   0.39706543497902597 0.4424282592181405 0.4866852432213174 0.5297257675773493 0.5714422533900905\
                   0.6117304311707967 0.6504896014566924 0.6876228865073646 0.7230374724487919 0.7566448412597095\
                   0.7883609920206077 0.8181066508718285 0.8458074691576979 0.8713942092584784 0.8948029176496047\
                   0.9159750847509828 0.934857791171014 0.9514038399775039 0.9655718746658484 0.9773264825275289\
                   0.9866382831645714 0.9934840019251554 0.9978465280773946 0.9997149575777348 0.9990846203258138\
                   0.9959570918360148 0.9903401893013969 0.982247952052328 0.9717006064683501\
                   0.9717006064683501} -cleanup {
    unset xi x y
}

test deriv2Test-2 {test procedure of second derivative calculation} -match mtchLst -setup {
    set xi 0
    for {set i 0} {$i<=100} {incr i} {
        set xi [= {($xi+0.05*$i/50)}]
        lappend x $xi
        lappend y [= {sin($xi)}]
    }
} -body {
    deriv2 $x $y
} -result {-0.0013333326666140365 -0.0013333326666140365 -0.0033333253667134286 -0.006333284416720178\
                   -0.010333131817991208 -0.015332693575287507 -0.021331639709303924 -0.02832940928697455\
                   -0.03632512049310697 -0.045317465780608544 -0.05530459215144625 -0.06628396665900062\
                   -0.07825222724274158 -0.09120501905951384 -0.10513681652539253 -0.12004073134125823\
                   -0.13590830685109062 -0.1527292991714686 -0.17049144561718008 -0.1891802210731026\
                   -0.20877858307706437 -0.22926670652348835 -0.2506217090465352 -0.2728173683223119\
                   -0.2958238326953256 -0.31960732675969555 -0.3441298537109199 -0.36934889654503494\
                   -0.3952171203965194 -0.42168207858470214 -0.44868592519016093 -0.476165137273359 -0.5040502501218554\
                   -0.532265609210701 -0.5607291428524377 -0.5893521598052996 -0.6180391763943495 -0.6466877779871902\
                   -0.6751885199209741 -0.7034248732344361 -0.7312732207721582 -0.7586029094238794 -0.7852763644113605\
                   -0.811149271636117 -0.8360708341631348 -0.8598841088889284 -0.8824264293740262 -0.9035299206419898\
                   -0.9230221115022063 -0.9407266495937315 -0.9564641238805778 -0.9700529987542107 -0.9813106631770855\
                   -0.9900545974614219 -0.996103659280171 -0.9992794893695408 -0.9994080360795512 -0.9963211964739402\
                   -0.989858570059322 -0.9798693194446054 -0.9662141302890197 -0.9487672608109796 -0.9274186688898798\
                   -0.902076202434327 -0.8726678362079524 -0.8391439357365519 -0.8014795262842846 -0.7596765422128774\
                   -0.7137660293701621 -0.6638102705167347 -0.6099048012645352 -0.552180281588761 -0.49080418576964974\
                   -0.42598227166596153 -0.3579597885917966 -0.2870223818320731 -0.21349665105690255\
                   -0.13775031966699214 -0.060191972484150195 0.01872967971691514 0.09852704849342953\
                   0.1786754658058465 0.25861556525122315 0.33775627527527075 0.4154784476044516 0.4911391375120896\
                   0.5640765448292241 0.6336156158241523 0.6990742962207231 0.7597704147382205 0.8150291646771141\
                   0.8641911383329001 0.9066208555157483 0.9417157133287176 0.9689152698058471 0.9877107592386988\
                   0.9976547222817217 0.99837061950907 0.9895622833071936 0.9710230501829831\
                   0.9710230501829831} -cleanup {
    unset xi x y
                   }

test deriv2Test-3 {test procedure of second derivative calculation with mismatched lengths} -setup {
    set x [list 0 1 2 3 4 2]
    set y [list 11 12 13 14 15 16 17]
} -body {
    catch {deriv2 $x $y} errorStr
    return $errorStr
} -result "Length of x '6' is not equal to length of y '7'" -cleanup {
    unset x y errorStr
}

cleanupTests
