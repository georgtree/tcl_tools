'\"
'\" '\" Copyright (c) George Yashin
'\"
.TH "tcl::mathfunc" 3tcl 0\&.1 "tcl_tools" "Collection of Tcl tools"
.SH NAME
tcl::mathfunc - Commands in namespace tcl::mathfunc
.SH SYNOPSIS
\fBdivll\fP \fIlist1 list2\fP
.br
\fBdivlsc\fP \fIlist scalar\fP
.br
\fBexactone\fP \fI?args?\fP
.br
\fBli\fP \fIlist index ?args?\fP
.br
\fBlindex\fP \fIlist index ?args?\fP
.br
\fBllength\fP \fIlist\fP
.br
\fBlogb\fP \fIvalue base\fP
.br
\fBlrange\fP \fIlist first last\fP
.br
\fBmaxl\fP \fIlist\fP
.br
\fBminl\fP \fIlist\fP
.br
\fBmulll\fP \fIlist1 list2\fP
.br
\fBmullsc\fP \fIlist scalar\fP
.br
\fBpowll\fP \fIlist1 list2\fP
.br
\fBpowlsc\fP \fIlist scalar\fP
.br
\fBsubll\fP \fIlist1 list2\fP
.br
\fBsublsc\fP \fIlist scalar\fP
.br
\fBsumll\fP \fIlist1 list2\fP
.br
\fBsumlsc\fP \fIlist scalar\fP
.br
.SH ::TCL::MATHFUNC
.SH COMMANDS
.PP
.RS -4n
\fBdivll\fR (::tcl::mathfunc)
.RE
.PP
Divides each element of the list1 to each element of list2
.RS 4n\fBdivll\fP \fIlist1 list2\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list1
First list of values\&.
.TP
list2
Second list of values\&.
.RE
.PP
\fBReturn value\fR
.PP
list
.PP
.RS -4n
\fBdivlsc\fR (::tcl::mathfunc)
.RE
.PP
Divides each element of the list to scalar value
.RS 4n\fBdivlsc\fP \fIlist scalar\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
List of values\&.
.TP
scalar
Scalar divider\&.
.RE
.PP
\fBReturn value\fR
.PP
list
.PP
.RS -4n
\fBexactone\fR (::tcl::mathfunc)
.RE
.PP
Calculates boolean function that returns true if only exactly one element is true
.RS 4n\fBexactone\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
args
Boolean values\&.
.RE
.PP
\fBReturn value\fR
.PP
boolean
.PP
.RS -4n
\fBli\fR (::tcl::mathfunc)
.RE
.PP
Wraps lindex command into expr function
.RS 4n\fBli\fP \fIlist index ?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
Not documented\&.
.TP
index
Not documented\&.
.RE
.PP
.RS -4n
\fBlindex\fR (::tcl::mathfunc)
.RE
.PP
Wraps lindex command into expr function
.RS 4n\fBlindex\fP \fIlist index ?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
Not documented\&.
.TP
index
Not documented\&.
.RE
.PP
.RS -4n
\fBllength\fR (::tcl::mathfunc)
.RE
.PP
Wraps llength command into expr function
.RS 4n\fBllength\fP \fIlist\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
Not documented\&.
.RE
.PP
.RS -4n
\fBlogb\fR (::tcl::mathfunc)
.RE
.PP
Implements logarithm function with arbitary base
.RS 4n\fBlogb\fP \fIvalue base\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
value
Value to calculate the logarithm from\&.
.TP
base
Logarithm base\&.
.RE
.PP
\fBReturn value\fR
.PP
value of logarithm
.PP
.RS -4n
\fBlrange\fR (::tcl::mathfunc)
.RE
.PP
Wraps lrange command into expr function
.RS 4n\fBlrange\fP \fIlist first last\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
Not documented\&.
.TP
first
Not documented\&.
.TP
last
Not documented\&.
.RE
.PP
.RS -4n
\fBmaxl\fR (::tcl::mathfunc)
.RE
.PP
Wraps ::tcl::mathfunc::max command to accept single list instead of expanded one
.RS 4n\fBmaxl\fP \fIlist\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
Not documented\&.
.RE
.PP
.RS -4n
\fBminl\fR (::tcl::mathfunc)
.RE
.PP
Wraps ::tcl::mathfunc::min command to accept single list instead of expanded one
.RS 4n\fBminl\fP \fIlist\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
Not documented\&.
.RE
.PP
.RS -4n
\fBmulll\fR (::tcl::mathfunc)
.RE
.PP
Multiplies each element of the list1 to each element of list2
.RS 4n\fBmulll\fP \fIlist1 list2\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list1
First list of values\&.
.TP
list2
Second list of values\&.
.RE
.PP
\fBReturn value\fR
.PP
list
.PP
.RS -4n
\fBmullsc\fR (::tcl::mathfunc)
.RE
.PP
Multiplies each element of the list to scalar value
.RS 4n\fBmullsc\fP \fIlist scalar\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
List of values\&.
.TP
scalar
Scalar multiplier\&.
.RE
.PP
\fBReturn value\fR
.PP
list
.PP
.RS -4n
\fBpowll\fR (::tcl::mathfunc)
.RE
.PP
Exponentiates each element of the list1 in each element of list2
.RS 4n\fBpowll\fP \fIlist1 list2\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list1
First list of values\&.
.TP
list2
Second list of values\&.
.RE
.PP
\fBReturn value\fR
.PP
list
.PP
.RS -4n
\fBpowlsc\fR (::tcl::mathfunc)
.RE
.PP
Exponentiates each element of the list in scalar value
.RS 4n\fBpowlsc\fP \fIlist scalar\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
List of values\&.
.TP
scalar
Scalar power value\&.
.RE
.PP
\fBReturn value\fR
.PP
list
.PP
.RS -4n
\fBsubll\fR (::tcl::mathfunc)
.RE
.PP
Subtracts each element of the list2 from each element of list1
.RS 4n\fBsubll\fP \fIlist1 list2\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list1
First list of values\&.
.TP
list2
Second list of values\&.
.RE
.PP
\fBReturn value\fR
.PP
list
.PP
.RS -4n
\fBsublsc\fR (::tcl::mathfunc)
.RE
.PP
Subtracts scalar value from each element of the list
.RS 4n\fBsublsc\fP \fIlist scalar\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
List of values\&.
.TP
scalar
Scalar value to subtract\&.
.RE
.PP
\fBReturn value\fR
.PP
list
.PP
.RS -4n
\fBsumll\fR (::tcl::mathfunc)
.RE
.PP
Sums each element of the list1 with each element of list2
.RS 4n\fBsumll\fP \fIlist1 list2\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list1
First list of values\&.
.TP
list2
Second list of values\&.
.RE
.PP
\fBReturn value\fR
.PP
list
.PP
.RS -4n
\fBsumlsc\fR (::tcl::mathfunc)
.RE
.PP
Adds scalar value to each element of the list
.RS 4n\fBsumlsc\fP \fIlist scalar\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
list
List of values\&.
.TP
scalar
Scalar value to add\&.
.RE
.PP
\fBReturn value\fR
.PP
list

